
TO DO  (Not sorted by priority)
-----

0. Debug export script to use backslashes when it writes URLs.

1. English panel output (1-2 weeks):
	First, restates the givens and the goal (say for theorem, similar to below) in first paragraph, with no expansions, probably
	italicized.
	
  It will explain the diagram (JS & perhaps some backend querying)
	For example, when the user draws an arrow, it says "Let $f: A\to B$ be a map." 
	But it will also stuff like convert a list of lets into one commatized let with ", and $g$ be arrows" at the end.
	When it applys a theorem, it says "(By/Since) <link to theorem>(+) we have that <conclusion from theorem with vars
	substituted properly>(+).
	
	The (+) buttons show up in the text on hovering over a link, and will expand the definition/theorem into an inserted paragraph,
	with "[The] <theorem> states that every R-module...".  (In other words/This means that) <expanded definition>.
	
	Version two will have restricted English to Diagram conversion where user errors (unaccepted language) is highlighted in red.

	It would be nice to make this a Markdown editor/viewer.
	
2. Validator for URL-valid chars in Diagram name (1-2 days).

3. Math options:
		epimorphism
		monomorphism
		general
		that auto-apply styles.  Store the state in JS until user clicks Save.
		
4. Exact Rows / Columns / Diagonals (also Differential Rows / Columns / Diagonals) for abelian categories.

(DONE) 5. Debug integration of old load code.

6. Refactor model code to handle arrow-to-arrow connection types.  We can do this transparently for all types using Neomodel
   StructuredNode's for arrows having source / target be Relations.
	 
7. Arrow option GUI stuff with a gear or pencil button (1-2weeks)


Free Advertising:
---
	LinkedIn post
	MSE post
	MSE Ads
	MSE Profile (network-wide)
	Side Projectors
	YouTube videos
	Neo4j forums showcase
	Django forums showcase
	Craigslist
	TODO: look up how to advertise for free